(load "tagbody.scm")
(load "primitives.scm")

(load "loop-defmacro.scm")

(load "generics-and-globals.scm")
(load "utilities.scm")
(load "combinatory-parsing.scm")
(load "parse-common.scm")
(load "clause.scm")
(load "expansion.scm")
(load "main-clause.scm")
(load "variable-clause.scm")
(load "selectable-clause.scm")
(load "unconditional-clause.scm")
(load "accumulation-clause.scm")
(load "termination-test-clause.scm")
(load "var-spec.scm")
(load "type-spec.scm")
(load "name-clause.scm")
(load "initial-clause.scm")
(load "final-clause.scm")
(load "with-clause.scm")
(load "return-clause.scm")
(load "do-clause.scm")
(load "collect-clause.scm")
;(load "append-clause.scm")
;(load "nconc-clause.scm")
;(load "count-clause.scm")
;(load "sum-clause.scm")
;(load "maximize-clause.scm")
;(load "minimize-clause.scm")
;(load "conditional-clause.scm")
(load "while-until-clauses.scm")
;(load "repeat-clause.scm")
;(load "always-clause.scm")
;(load "never-clause.scm")
;(load "thereis-clause.scm")
;(load "for-as-clause.scm")
;(load "for-as-arithmetic-clause.scm")
;(load "for-as-list-clause.scm")
;(load "for-as-equals-then-clause.scm")
;(load "for-as-across-clause.scm")
;(load "for-as-hash-clause.scm")
;(load "for-as-package-clause.scm")

;(load "analysis.scm")

;(macroexpand (loop (+ 2 3)))
;
;(define x 5)
;;(macroexpand (loop while (> x 0)))
;(format #t "~a~%" (macroexpand (loop while (> x 0) do (format #t "~a~%" x) (set! x (- x 1)))))
;(loop while (> x 0) do (format #t "~a~%" x) (set! x (- x 1)))
(format #t "~a~%" (let ((x 5)) (loop while (> x 0) do (set! x (- x 1)) collect x)))
